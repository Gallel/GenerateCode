<time value="0:00:56.559631"/>
<test id="1" result="OK" case="tests the StackArrayImpl constructor without parameters" expected="The stack should be created with MAX_SIZE as maximum capacity and it should be empty" result="The stack was correctly created with MAX_SIZE as maximum capacity and it is empty" reason=""/>
<test id="2" result="OK" case="tests the StackArrayImpl constructor with a parameter, creating a stack with capacity 5" expected="The stack should be created with capacity 5 and it should be empty" result="The stack was correctly created with capacity 5 and it is empty" reason=""/>
<test id="3" result="OK" case="tests the isEmpty method with an empty stack" expected="The isEmpty method should return true" result="The isEmpty method returned true as expected" reason=""/>
<test id="4" result="OK" case="tests the isEmpty method with a non-empty stack" expected="The isEmpty method should return false" result="The isEmpty method returned false as expected" reason=""/>
<test id="5" result="OK" case="tests the isFull method with a stack that is not full" expected="The isFull method should return false" result="The isFull method returned false as expected" reason=""/>
<test id="6" result="OK" case="tests the isFull method with a stack that is full" expected="The isFull method should return true" result="The isFull method returned true as expected" reason=""/>
<test id="7" result="OK" case="tests the peek method with an empty stack" expected="The peek method should return null" result="The peek method returned null as expected" reason=""/>
<test id="8" result="OK" case="tests the peek method with a non-empty stack" expected="The peek method should return the last element added to the stack" result="The peek method returned the last element added to the stack as expected" reason=""/>
<test id="9" result="OK" case="tests the pop method with an empty stack" expected="The pop method should return null" result="The pop method returned null as expected" reason=""/>
<test id="10" result="OK" case="tests the pop method with a non-empty stack" expected="The pop method should return the last element added to the stack and remove it from the stack" result="The pop method returned the last element added to the stack and removed it from the stack as expected" reason=""/>
<test id="11" result="OK" case="tests the push method with a non-full stack" expected="The element should be added to the stack and its size should increase by 1" result="The element was correctly added to the stack and its size increased by 1" reason=""/>
<test id="12" result="FAILED" case="tests the push method with a full stack" expected="pushing an element into a full stack should throw a FullContainerException" result="(no exception was thrown)" reason="The code did not throw the expected FullContainerException"/>
<test id="13" result="OK" case="tests the size method with an empty stack" expected="The size method should return 0" result="The size method returned 0 as expected" reason=""/>
<test id="14" result="OK" case="tests the size method with a non-empty stack" expected="The size method should return the number of elements in the stack" result="The size method returned the correct number of elements in the stack as expected" reason=""/>
<test id="15" result="OK" case="tests the toString method with an empty stack" expected="The toString method should return the string \"[]\"" result="The toString method returned the string \"[]\" as expected" reason=""/>
<test id="16" result="OK" case="tests the toString method with a non-empty stack" expected="The toString method should return the string \"[elem1, elem2, ...]\"" result="The toString method returned the correct string as expected" reason=""/>
<test id="17" result="OK" case="tests the values iterator with an empty stack" expected="the iterator has no more elements" result="the iterator has no more elements as expected" reason=""/>
<test id="18" result="OK" case="tests the values iterator with a non-empty stack" expected="the iterator returns all elements in the stack in the correct order" result="the iterator returns all elements in the stack in the correct order as expected" reason=""/>
<test id="19" result="OK" case="tests the behavior of the stack after performing push, pop, and peek operations" expected="the operations should be performed on the stack correctly" result="All operations were performed on the stack correctly as expected" reason=""/>
<test id="20" result="FAILED" case="tests the behavior of the stack after performing push operations until it's full" expected="pushing an element into a full stack should throw a FullContainerException" result="The code did not throw the expected FullContainerException" reason=""/>
