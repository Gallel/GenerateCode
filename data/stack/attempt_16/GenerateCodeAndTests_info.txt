<time value="0:00:44.799966"/>
<test id="1" result="OK" case="Test isEmpty method when stack is empty" expected="true" result="(new StackArrayImpl<Integer>()).isEmpty()" reason=""/>
<test id="2" result="OK" case="Test isEmpty method when stack is is not empty" expected="false" result="{ StackArrayImpl<Integer> stack = new StackArrayImpl<Integer>(); stack.push(10); stack.isEmpty(); }" reason=""/>
<test id="3" result="OK" case="Test isFull method when stack is full" expected="true" result="{ StackArrayImpl<Integer> stack = new StackArrayImpl<Integer>(1); stack.push(10); stack.isFull(); }" reason=""/>
<test id="4" result="OK" case="Test isFull method when stack is not full" expected="false" result="{ StackArrayImpl<Integer> stack = new StackArrayImpl<Integer>(2); stack.push(10); stack.isFull(); }" reason=""/>
<test id="5" result="OK" case="Test peek method when stack is empty" expected="null" result="(new StackArrayImpl<Integer>()).peek()" reason=""/>
<test id="6" result="OK" case="Test peek method when stack is not empty" expected="'"Java"'" result="{ StackArrayImpl<String> stack = new StackArrayImpl<String>(); stack.push("Java"); stack.peek(); }" reason=""/>
<test id="7" result="OK" case="Test pop method when stack is empty" expected="null" result="(new StackArrayImpl<Integer>()).pop()" reason=""/>
<test id="8" result="OK" case="Test pop method when stack is not empty" expected="'"Java"'" result="{ StackArrayImpl<String> stack = new StackArrayImpl<String>(); stack.push("Java"); stack.pop(); }" reason=""/>
<test id="9" result="OK" case="Test push method when stack is full" expected="null" result="{ StackArrayImpl<Integer> stack = new StackArrayImpl<Integer>(1); stack.push(10); stack.push(20); }" reason=""/>
<test id="10" result="OK" case="Test push method when stack is not full" expected="2" result="{ StackArrayImpl<Integer> stack = new StackArrayImpl<Integer>(2); stack.push(10); stack.push(20); stack.size(); }" reason=""/>
<test id="11" result="OK" case="Test size method when stack is empty" expected="0" result="(new StackArrayImpl<Integer>()).size()" reason=""/>
<test id="12" result="OK" case="Test size method when stack is not empty" expected="2" result="{ StackArrayImpl<Integer> stack = new StackArrayImpl<Integer>(2); stack.push(10); stack.push(20); stack.size(); }" reason=""/>
<test id="13" result="OK" case="Test toString method" expected="'[ Java Python ]'" result="{ StackArrayImpl<String> stack = new StackArrayImpl<String>(2); stack.push("Python"); stack.push("Java"); stack.toString(); }" reason=""/>
