<time value="0:00:43.242822"/>
<test id="1" result="OK" case="check if container is empty when created" expected="true" result="(new StackArrayImpl<Integer>()).isEmpty()" reason=""/>
<test id="2" result="OK" case="check if container is not empty after push" expected="false" result="{StackArrayImpl<Integer> stack = new StackArrayImpl<Integer>(); stack.push(1); stack.isEmpty();}" reason=""/>
<test id="3" result="OK" case="check if container is empty after adding and deleting an element" expected="true" result="{StackArrayImpl<Integer> stack = new StackArrayImpl<Integer>(); stack.push(1); stack.pop(); stack.isEmpty();}" reason=""/>
<test id="4" result="OK" case="check if peek returns null when container is empty" expected="null" result="(new StackArrayImpl<Integer>()).peek()" reason=""/>
<test id="5" result="OK" case="check if peek returns the last element added" expected="2" result="{StackArrayImpl<Integer> stack = new StackArrayImpl<Integer>(); stack.push(1); stack.push(2); stack.peek();}" reason=""/>
<test id="6" result="OK" case="check if pop returns null when container is empty" expected="null" result="(new StackArrayImpl<Integer>()).pop()" reason=""/>
<test id="7" result="OK" case="check if pop returns the last element added" expected="1" result="{StackArrayImpl<Integer> stack = new StackArrayImpl<Integer>(); stack.push(1); stack.push(2); stack.pop();}" reason=""/>
<test id="8" result="FAILED" case="check if push throws exception when container is full" expected="IllegalStateException: Stack is full" result="{StackArrayImpl<Integer> stack = new StackArrayImpl<Integer>(1); stack.push(1); stack.push(2);}" reason="Exception not being thrown"/>
<test id="9" result="OK" case="check if push adds elements to the stack" expected="2" result="{StackArrayImpl<Integer> stack = new StackArrayImpl<Integer>(); stack.push(1); stack.push(2); stack.size();}" reason=""/>
<test id="10" result="OK" case="check if size returns 0 when container is empty" expected="0" result="(new StackArrayImpl<Integer>()).size()" reason=""/>
<test id="11" result="OK" case="check if size returns the number of elements in the container" expected="2" result="{StackArrayImpl<Integer> stack = new StackArrayImpl<Integer>(); stack.push(1); stack.push(2); stack.size();}" reason=""/>
<test id="12" result="OK" case="check if toString returns empty brackets when container is empty" expected="[]" result="(new StackArrayImpl<Integer>()).toString()" reason=""/>
<test id="13" result="OK" case="check if toString returns the elements in the container" expected="[1, 2]" result="{StackArrayImpl<Integer> stack = new StackArrayImpl<Integer>(); stack.push(1); stack.push(2); stack.toString();}" reason=""/>
