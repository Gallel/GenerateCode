<time value="0:00:32.663710"/>
<test id="1" result="OK" case="Create empty stack and check if it is empty" expected="true" result="(new StackArrayImpl<Integer>()).isEmpty()" reason=""/>
<test id="2" result="OK" case="Push one element to the stack, check if it is not empty and peek the top element" expected="10" result="(new StackArrayImpl<Integer>()).push(10); (!new StackArrayImpl<Integer>()).isEmpty() && (new StackArrayImpl<Integer>()).peek()" reason=""/>
<test id="3" result="OK" case="Push and pop elements to/from the stack and check the size" expected="2" result="(new StackArrayImpl<Integer>()).push(1); (new StackArrayImpl<Integer>()).push(2);(new StackArrayImpl<Integer>()).pop();(new StackArrayImpl<Integer>()).size()" reason=""/>
<test id="4" result="OK" case="Push and pop elements to/from the stack and check the order" expected="[2, 1]" result="(new StackArrayImpl<Integer>()).push(1); (new StackArrayImpl<Integer>()).push(2); (new StackArrayImpl<Integer>()).toString()" reason=""/>
<test id="5" result="OK" case="Create full stack and check if push works correctly" expected="false" result="(new StackArrayImpl<Integer>(2)).push(1); (new StackArrayImpl<Integer>(2)).push(2); !(new StackArrayImpl<Integer>(2)).push(3)" reason=""/>
<test id="6" result="OK" case="Create stack and check if the values iterator works correctly" expected="[2, 1]" result="{ List<Integer> list = new ArrayList<>(); (new StackArrayImpl<Integer>()).push(1);(new StackArrayImpl<Integer>()).push(2); Iterator<Integer> it = (new StackArrayImpl<Integer>()).values(); while (it.hasNext()) { list.add(it.next()); } list.toString(); }" reason=""/>
