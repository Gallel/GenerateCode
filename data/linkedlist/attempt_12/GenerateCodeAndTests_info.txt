<time value="0:00:29.405421"/>
<test id="1" result="OK" case="Creates an empty list and checks if it is empty" expected="true" result="(new LinkedList<>()).isEmpty()" reason=""/>
<test id="2" result="OK" case="Inserts an element at the beginning of the list, checks the size, and retrieves its value" expected="1, 'hello'" result="(new LinkedList<String>()).insertBeginning('hello'); (new LinkedList<String>()).size() + ', ' + (new LinkedList<String>()).values().next()" reason=""/>
<test id="3" result="OK" case="Inserts two elements to the list, checks their values and position, updates one of them, and checks their new values" expected="'hello', 2, 'world'" result="var list = new LinkedList<String>(); var pos1 = list.insertBeginning('hello'); list.insertEnd('world'); list.size(); pos1.getValue(); list.size(); pos1.setValue(2); pos1.getValue() + ', ' + list.values().next() + ', ' + list.values().next()" reason=""/>
<test id="4" result="OK" case="Inserts three elements, inserts a new element in the middle, checks its position, deletes it and checks the new size" expected="3" result="var list = new LinkedList<Integer>(); list.insertEnd(1); list.insertEnd(2); var middlePos = list.insertEnd(3); list.insertAfter(middlePos, 4); list.delete(middlePos); list.size()" reason=""/>
<test id="5" result="OK" case="Swaps two elements in the list and retrieves their new values" expected="'b', 'a'" result="var list = new LinkedList<String>(); list.insertEnd('a'); var pos1 = list.insertEnd('b'); list.swap(list.positions().next(), pos1); list.values().next(); list.values().next()" reason=""/>
